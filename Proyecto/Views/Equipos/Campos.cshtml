@model IEnumerable<Domain.Singles.sCampos>
@using GridMvc.Sorting
@using GridMvc.Html

@{
    ViewBag.Title = "Campos equipo";
    Html.RenderAction("HeadInfo", "Equipos", new { id = ViewBag.EquipoId });
}


<ul id="tabs" class="nav nav-tabs na" data-tabs="tabs">
    <li>@Html.ActionLink("Equipos", "Index", "Equipos", null, new { @class = "btn btn-primary" })</li>
    <li>@Html.ActionLink("Jugadores", "listaJugadores", "Equipos", new { idEquipo = ViewBag.EquipoId }, null)</li>
    <li>@Html.ActionLink("Estadisticas", "Estadisticas", "Equipos", new { idEquipo = ViewBag.EquipoId }, null)</li>
    <li class="active"><a href="#" data-toggle="tab">Campos</a></li>



</ul>



<div style="padding: 10px 0 5px 0;">
    <p id="warningMessage" class=" bg-warning text-warning"></p>
</div>


<small>

    @Html.Grid(Model).EmptyText("No hay datos que mostrar").Columns(columns =>
            {

                columns.Add(m => m.idCampo).Titled("#");
                columns.Add(m => m.Nombre).Titled("Nombre"); 
                columns.Add(m => m.Direccion).Titled("Direccion");

                columns.Add()
                     .Encoded(false)
                     .Sanitized(false)
                     .RenderValueAs(m => CustomRenderingOfColumnFicha(m));

            }).WithPaging(20).Sortable(true)


    @Html.ActionLink("Nuevo campo", "Gestion", "Campos", new { id = -1, idEquipo = ViewBag.EquipoId }, new { @class = "btn btn-primary" })
        </small>

        @helper CustomRenderingOfColumnFicha(Domain.Singles.sCampos datos)
        {


}

        <script>

            function checkSuccess(result) {

                if (result.success == true) {
                    if (result.reload) document.location.reload();
                    if (result.redirect != null) document.location.href = result.redirect;
                };

                $('#warningMessage').html(result.messaje);

            }

        </script>